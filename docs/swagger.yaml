definitions:
  model.Expense:
    properties:
      amount:
        type: number
      category:
        type: string
      currency:
        type: string
      description:
        type: string
      id:
        type: string
      timeStamp:
        type: string
      user_id:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/expenses:
    get:
      description: List expenses with optional filters
      parameters:
      - description: User ID
        in: query
        name: user_id
        type: string
      - description: Category
        in: query
        name: category
        type: string
      - description: Currency
        in: query
        name: currency
        type: string
      - description: Start date (YYYY-MM-DD)
        in: query
        name: from
        type: string
      - description: End date (YYYY-MM-DD)
        in: query
        name: to
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Expense'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: List expenses with filters
      tags:
      - expenses
    post:
      consumes:
      - application/json
      description: Create a new expense record
      parameters:
      - description: Expense data
        in: body
        name: expense
        required: true
        schema:
          $ref: '#/definitions/model.Expense'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Expense'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create an expense
      tags:
      - expenses
  /api/v1/expenses/{id}:
    delete:
      description: Delete an expense by ID
      parameters:
      - description: Expense ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete an expense
      tags:
      - expenses
    get:
      description: Get a single expense by its ID
      parameters:
      - description: Expense ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Expense'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get expense by ID
      tags:
      - expenses
    put:
      consumes:
      - application/json
      description: Update an existing expense by ID
      parameters:
      - description: Expense ID
        in: path
        name: id
        required: true
        type: string
      - description: Expense data
        in: body
        name: expense
        required: true
        schema:
          $ref: '#/definitions/model.Expense'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Expense'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update an expense
      tags:
      - expenses
  /api/v1/expenses/summary:
    get:
      description: Get summary of expenses by category, with optional filters
      parameters:
      - description: User ID
        in: query
        name: user_id
        type: string
      - description: Start date (YYYY-MM-DD)
        in: query
        name: from
        type: string
      - description: End date (YYYY-MM-DD)
        in: query
        name: to
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: number
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get expense summary
      tags:
      - expenses
  /api/v1/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return JWT token
      parameters:
      - description: User credentials
        in: body
        name: user
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login user
      tags:
      - users
  /api/v1/signup:
    post:
      consumes:
      - application/json
      description: Register a new user with username and password
      parameters:
      - description: User credentials
        in: body
        name: user
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - users
  /api/v1/users:
    post:
      consumes:
      - application/json
      description: Create a new user with username and password
      parameters:
      - description: User credentials
        in: body
        name: user
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a new user (admin use)
      tags:
      - users
swagger: "2.0"
